From 378917e6e60dcccce44b0223af2c10fb74eb9b13 Mon Sep 17 00:00:00 2001
From: Chirayu Desai <chirayu@calyxinstitute.org>
Date: Fri, 21 May 2021 17:48:52 -0400
Subject: [PATCH] android_webview: Always BlockNetworkLoads

---
 .../chromium/android_webview/AwServiceWorkerSettings.java | 8 +++++---
 .../java/src/org/chromium/android_webview/AwSettings.java | 8 +++++---
 2 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/android_webview/java/src/org/chromium/android_webview/AwServiceWorkerSettings.java b/android_webview/java/src/org/chromium/android_webview/AwServiceWorkerSettings.java
index fdd0193c122c..c036c4ad6453 100644
--- a/android_webview/java/src/org/chromium/android_webview/AwServiceWorkerSettings.java
+++ b/android_webview/java/src/org/chromium/android_webview/AwServiceWorkerSettings.java
@@ -41,8 +41,8 @@ public class AwServiceWorkerSettings {
                 Process.myPid(),
                 Process.myUid()) == PackageManager.PERMISSION_GRANTED;
         synchronized (mAwServiceWorkerSettingsLock) {
-            mHasInternetPermission = hasInternetPermission;
-            mBlockNetworkLoads = !hasInternetPermission;
+            mHasInternetPermission = false;//hasInternetPermission;
+            mBlockNetworkLoads = true;//!hasInternetPermission;
         }
     }
 
@@ -119,7 +119,8 @@ public class AwServiceWorkerSettings {
                 throw new SecurityException("Permission denied - "
                         + "application missing INTERNET permission");
             }
-            mBlockNetworkLoads = flag;
+            Log.d(LOGTAG, "cdesai: Blocking network loads always");
+            mBlockNetworkLoads = true;//flag;
         }
     }
 
@@ -127,6 +128,7 @@ public class AwServiceWorkerSettings {
      * See {@link android.webkit.ServiceWorkerWebSettings#getBlockNetworkLoads}.
      */
     public boolean getBlockNetworkLoads() {
+        Log.d(LOGTAG, "cdesai: Blocking network loads always: " + mBlockNetworkLoads);
         synchronized (mAwServiceWorkerSettingsLock) {
             return mBlockNetworkLoads;
         }
diff --git a/android_webview/java/src/org/chromium/android_webview/AwSettings.java b/android_webview/java/src/org/chromium/android_webview/AwSettings.java
index 8d61be4fb883..a75c74c4682c 100644
--- a/android_webview/java/src/org/chromium/android_webview/AwSettings.java
+++ b/android_webview/java/src/org/chromium/android_webview/AwSettings.java
@@ -264,8 +264,8 @@ public class AwSettings {
                 Process.myPid(),
                 Process.myUid()) == PackageManager.PERMISSION_GRANTED;
         synchronized (mAwSettingsLock) {
-            mHasInternetPermission = hasInternetPermission;
-            mBlockNetworkLoads = !hasInternetPermission;
+            mHasInternetPermission = false;//hasInternetPermission;
+            mBlockNetworkLoads = true;//!hasInternetPermission;
             mEventHandler = new EventHandler();
             if (isAccessFromFileURLsGrantedByDefault) {
                 mAllowUniversalAccessFromFileURLs = true;
@@ -358,7 +358,8 @@ public class AwSettings {
                 throw new SecurityException("Permission denied - "
                         + "application missing INTERNET permission");
             }
-            mBlockNetworkLoads = flag;
+            Log.d(LOGTAG, "cdesai: Blocking network loads always");
+            mBlockNetworkLoads = true;//flag;
         }
     }
 
@@ -366,6 +367,7 @@ public class AwSettings {
      * See {@link android.webkit.WebSettings#getBlockNetworkLoads}.
      */
     public boolean getBlockNetworkLoads() {
+        Log.d(LOGTAG, "cdesai: Blocking network loads always " + mBlockNetworkLoads);
         synchronized (mAwSettingsLock) {
             return mBlockNetworkLoads;
         }
-- 
2.20.1

